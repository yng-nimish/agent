{"ast":null,"code":"var _jsxFileName = \"/Users/nimishs/Documents/Agent/frontend/src/components/ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    try {\n      // Update to API Gateway URL in production\n      const response = await axios.post(\"https://cwxb04pos2.execute-api.us-east-1.amazonaws.com/prod\", {\n        message: input\n      });\n      setMessages([...messages, userMessage, {\n        role: \"agent\",\n        text: response.data.response\n      }]);\n    } catch (error) {\n      setMessages([...messages, userMessage, {\n        role: \"agent\",\n        text: \"Error: Could not connect to the server.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96 overflow-y-auto mb-4 p-2 border\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 ${msg.role === \"user\" ? \"text-right\" : \"text-left\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `inline-block p-2 rounded ${msg.role === \"user\" ? \"bg-blue-100\" : \"bg-gray-100\"}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        className: \"flex-1 p-2 border rounded-l\",\n        placeholder: \"Type your message...\",\n        onKeyPress: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"p-2 bg-blue-500 text-white rounded-r\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","role","text","response","post","message","data","error","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/nimishs/Documents/Agent/frontend/src/components/ChatInterface.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction ChatInterface() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = { role: \"user\", text: input };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n\n    try {\n      // Update to API Gateway URL in production\n      const response = await axios.post(\n        \"https://cwxb04pos2.execute-api.us-east-1.amazonaws.com/prod\",\n        { message: input }\n      );\n      setMessages([\n        ...messages,\n        userMessage,\n        { role: \"agent\", text: response.data.response },\n      ]);\n    } catch (error) {\n      setMessages([\n        ...messages,\n        userMessage,\n        { role: \"agent\", text: \"Error: Could not connect to the server.\" },\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow\">\n      <div className=\"h-96 overflow-y-auto mb-4 p-2 border\">\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`mb-2 ${\n              msg.role === \"user\" ? \"text-right\" : \"text-left\"\n            }`}\n          >\n            <span\n              className={`inline-block p-2 rounded ${\n                msg.role === \"user\" ? \"bg-blue-100\" : \"bg-gray-100\"\n              }`}\n            >\n              {msg.text}\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className=\"flex\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          className=\"flex-1 p-2 border rounded-l\"\n          placeholder=\"Type your message...\"\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n        />\n        <button\n          onClick={sendMessage}\n          className=\"p-2 bg-blue-500 text-white rounded-r\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}